//====================================//
// インクルード
//====================================//
#include "lineSensor.h"
//====================================//
// グローバル変数の宣言
//====================================//

// ラインセンサ関連
uint32_t		lSensorInt[12] = {0};	// ラインセンサのAD値積算用
uint16_t		lSensor[12] = {0};	// ラインセンサのAD値積算用
lSensors 		*lSensors_list = (lSensors *)malloc(NUMSENSORS * sizeof(lSensors));

uint16_t		cntls = 0;		// ラインセンサの積算回数カウント用
/////////////////////////////////////////////////////////////////////
// モジュール名 getLineSensor
// 処理概要  	ラインセンサのAD値を取得し、平均値を計算する
// 引数     	なし
// 戻り値    	なし
/////////////////////////////////////////////////////////////////////
void getLineSensor(void) {
	uint8_t i;
	cntls++;
	for ( i=0;i<=11;i++) {
		lSensorInt[i] += analogVal[i];
	}

	if (cntls > 10) {
		for ( i=0;i<=11;i++) {
			lSensor[i] = lSensorInt[i]/10;
			lSensors_list[i].value = lSensor[i];
			lSensorInt[i] = 0;
		}
		cntls = 0;
	}
}
void initLsensors(void) {
	for (int i = 0; i < NUMSENSORS; i ++) lSensors_list[i].index = i;
}
/* qsort関数に渡す比較用の関数（昇順） */
int cmpare_lSensors(const void *n1, const void *n2) {
    if (((lSensors *)n1)->value > ((lSensors *)n2)->value) {
        return 1;
    } else if (((lSensors *)n1)->value < ((lSensors *)n2)->value) {
        return -1;
    }
    return 0;
}
/////////////////////////////////////////////////////////////////////
// モジュール名 getAngleSensor
// 処理概要  	ラインセンサのAD値からステア角を算出する
// 引数     	なし
// 戻り値    	なし
/////////////////////////////////////////////////////////////////////
void getAngleSensor(void) {
	qsort(lSensors_list, NUMSENSORS, sizeof(lSensors), cmpare_lSensors);
	print_lSensors_list(lSensors_list, NUMSENSORS);
}

void print_lSensors_list(const lSensors *lSensors_list, const int n) {
    printf("index\tvalue\n");
    for (int i = 0; i < n; i ++) {
        printf("  %d\t%lf\n", lSensors_list[i].index, lSensors_list[i].value);
    }
}